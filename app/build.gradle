apply plugin: 'com.android.application'

ext {
    versionNumber = computeVersionNumber()
    versionName = rootProject.version
    keystorePath = properties['keystorePath']
    storePassword = properties['storePassword']
    keyAlias = properties['keyAlias']
    keyPassword = properties['keyPassword']
    println "Live SDK version is " + versionName
    println "rootProject.properties is " + rootProject.properties
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.hypertrack.live"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode project.ext.versionNumber
        versionName project.ext.versionName
        testInstrumentationRunner
        multiDexEnabled true
    }

    signingConfigs {

        if (project.ext.keystorePath != null) {
            release {
                storeFile file(project.ext.keystorePath)
                storePassword project.ext.storePassword
                keyAlias project.ext.keyAlias
                keyPassword project.ext.keyPassword
            }
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".android.github"
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false

            if (signingConfigs.hasProperty("release")) {
                signingConfig signingConfigs.release
            }
        }
    }
}

repositories {
    mavenLocal()
    maven {
        name 'hypertrack'
        url 'http://m2.hypertrack.com'
    }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.1.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.14'

    implementation 'com.hypertrack:hypertrack:3.8.0'
    implementation 'com.hypertrack:hypertrack-views:0.6.0'
    implementation 'com.hypertrack:maps-google:0.1.1'

    implementation 'com.airbnb.android:lottie:3.1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

def computeVersionNumber() {

    def versionString = rootProject.version
    def match = (versionString =~ /(\d+)\.(\d+)\.(\d+)/)
    if (match) {
        def versionMajor = match.group(1).toInteger()
        def versionMinor = match.group(2).toInteger()
        def versionPatch = match.group(3).toInteger()
        return versionMajor * 1000000 + versionMinor * 1000 + versionPatch
    }
    throw new Exception("Could not read version.properties!")
}

// Google Play services Gradle plugin. Add google-services.json and uncomment
// apply plugin: 'com.google.gms.google-services'